version: '3.3'

services:
  book-app:
    build: .
    ports:
      - 8500:80
    command: ["flask", "run", "--host", "0.0.0.0", "--port", "80"]
    environment:
      - FLASK_APP=source.app:app
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - mongodb_user=admin 
      - mongodb_password=123456
      - mongodb_host=mongodb/test?authSource=admin
      - pgdb_user=postgres
      - pgdb_password=123456
    depends_on:
      - pgdb
    restart: always

  book-app-fast:
    build: .
    ports:
      - 8600:80
    command: ["uvicorn", "source.app-fast:app", "--host", "0.0.0.0", "--port", "80"]
    environment:
      - PYTHONUNBUFFERED=1
      - mongodb_user=admin 
      - mongodb_password=123456
      - mongodb_host=mongodb/test?authSource=admin
      - pgdb_user=postgres
      - pgdb_password=123456
    depends_on:
      - pgdb
    restart: always

  mongodb:
    image: mongo
    ports:
      - 27016:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
      
    volumes:
     - ./mongo:/data/db
  mongo-express:
    image: mongo-express
    restart: always # fixes MongoNetworkError when mongodb is not ready when mongo-express starts
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=123456
      - ME_CONFIG_MONGODB_SERVER=mongodb  

  pgdb:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: books
    volumes:
     - ./postgres:/var/lib/postgresql/data
    ports: 
     - 5434:5432

 
  

      






 
    


